<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.repository.requests.ApplyMapper">

    <!-- 사용신청 목록 조회 -->
    <select id="applyList" parameterType="map" resultType="kr.happyjob.study.vo.requests.ApplyModel">
        /* ApplyMapper.applyList */
        SELECT
            pd.product_detail_code,
            pi.category_code,
            pi.product_name,
            pd.product_state,
            COALESCE(cc.category_name, pi.category_code) as category_name,
            pd.order_reason
        FROM tb_product_detail pd
        JOIN tb_product_info pi ON pi.product_no = pd.product_no
        LEFT JOIN tb_category_code cc ON cc.category_code = pi.category_code
        <where>
            <if test="searchsel != null and searchsel != '' and searchword != null and searchword != ''">
                <choose>
                    <when test="searchsel == 'product_name'">
                        AND pi.product_name LIKE CONCAT('%', #{searchword}, '%')
                    </when>
                    <when test="searchsel == 'category_name'">
                        AND (cc.category_name LIKE CONCAT('%', #{searchword}, '%') OR pi.category_code = #{searchword})
                    </when>
                    <when test="searchsel == 'product_state'">
                        AND pd.product_state = #{searchword}
                    </when>
                </choose>
            </if>
        </where>
        ORDER BY pd.product_detail_code DESC
        LIMIT #{pageIndex}, #{pageSize}
    </select>

    <!-- 목록 개수 -->
    <select id="applyCnt" parameterType="map" resultType="int">
        SELECT COUNT(pd.product_detail_code)
        FROM tb_product_detail pd
        JOIN tb_product_info pi ON pi.product_no = pd.product_no
        LEFT JOIN tb_category_code cc ON cc.category_code = pi.category_code
        <where>
            <if test="searchsel != null and searchsel != '' and searchword != null and searchword != ''">
                <choose>
                    <when test="searchsel == 'product_name'">
                        AND pi.product_name LIKE CONCAT('%', #{searchword}, '%')
                    </when>
                    <when test="searchsel == 'category_name'">
                        AND (cc.category_name LIKE CONCAT('%', #{searchword}, '%') OR pi.category_code = #{searchword})
                    </when>
                    <when test="searchsel == 'product_state'">
                        AND pd.product_state = #{searchword}
                    </when>
                </choose>
            </if>
        </where>
    </select>

    <!-- 상세 조회 -->
    <select id="applyDetail" parameterType="map" resultType="kr.happyjob.study.vo.requests.ApplyModel">
        SELECT
            pd.product_detail_code,
            pi.category_code,
            pi.product_name,
            pd.product_state,
            ui.name,
            pd.order_date     AS orderDate,
            pd.rental_date    AS rentalDate,
            pd.order_reason   AS order_reason,
            cc.category_name
        FROM tb_product_detail pd
                 JOIN tb_product_info pi ON pi.product_no = pd.product_no
                 LEFT JOIN tb_category_code cc ON cc.category_code = pi.category_code
                 LEFT JOIN tb_userinfo ui ON ui.loginID = pd.loginID
        WHERE pd.product_detail_code = #{product_detail_code}
        ORDER BY pd.order_date DESC
            LIMIT 1
    </select>

    <!-- 등록 -->
    <update id="applyReg" parameterType="map">
        <!-- tb_product_detail 상태를 'O'(사용신청)로 업데이트 -->
        UPDATE tb_product_detail
        SET product_state = 'O',
            order_date = NOW(),
            order_reason = #{order_reason},
            loginID = #{loginID}
        WHERE product_detail_code = #{product_detail_code}
    </update>

    <!-- 반납 -->
    <update id="applyReturn" parameterType="map">
        UPDATE tb_product_detail
        SET product_state = 'R',
            return_date = NOW(),
            order_reason = #{order_reason}
        WHERE product_detail_code = #{product_detail_code}
    </update>

    <!-- 취소 -->
    <update id="applyCancel" parameterType="map">
        UPDATE tb_product_detail
        SET product_state = 'N',
            order_date = NULL,
            return_date = NULL,
            order_reason = #{order_reason},
            loginID = NULL
        WHERE product_detail_code = #{product_detail_code}
    </update>

    <!-- 카테고리 조회 -->
    <select id="getCategories" resultType="map">
        /* ApplyMapper.getCategories */
        SELECT
            category_code,
            category_name
        FROM tb_category_code
        ORDER BY category_code ASC
    </select>

</mapper>
